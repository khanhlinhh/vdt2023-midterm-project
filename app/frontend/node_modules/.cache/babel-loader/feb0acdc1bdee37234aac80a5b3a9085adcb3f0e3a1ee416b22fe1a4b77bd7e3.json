{"ast":null,"code":"var _jsxFileName = \"/Users/maccaco/Documents/vdt/vdt2023-midterm-project/app/frontend/src/tables/AttendeeTable.js\";\nimport React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid/DataGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendeeTable = props => {\n  const columns = [{\n    field: \"name\",\n    headerName: \"Name\",\n    width: 180,\n    headerAlign: \"center\"\n  }, {\n    field: \"username\",\n    headerName: \"Username\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\"\n  }, {\n    field: \"sex\",\n    headerName: \"Sex\",\n    width: 60,\n    align: \"center\",\n    headerAlign: \"center\"\n  }, {\n    field: \"yearOfBirth\",\n    headerName: \"Year\",\n    width: 70,\n    align: \"center\",\n    headerAlign: \"center\"\n  }, {\n    field: \"university\",\n    headerName: \"University\",\n    width: 400,\n    align: \"center\",\n    headerAlign: \"center\"\n  }, {\n    field: \"major\",\n    headerName: \"Major\",\n    width: 150,\n    headerAlign: \"center\"\n  }, {\n    field: \"edit\",\n    headerName: \"Edit\",\n    width: 50,\n    headerAlign: \"center\"\n  }];\n  const rows = props.attendees;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      getRowId: row => row.username,\n      columns: columns,\n      getRowHeight: () => 50,\n      initialState: {\n        pagination: {\n          paginationModel: {\n            page: 0,\n            pageSize: 10\n          }\n        },\n        sorting: {\n          sortModel: [{\n            field: \"name\",\n            sort: \"asc\"\n          }]\n        }\n      },\n      pageSizeOptions: [5, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n  // <table>\n  //   <thead>\n  //     <tr>\n  //       <th>Name</th>\n  //       <th>Username</th>\n  //       <th>Sex</th>\n  //       <th>Year Of Birth</th>\n  //       <th>University</th>\n  //       <th>Major</th>\n  //       <th>Actions</th>\n  //     </tr>\n  //   </thead>\n  //   <tbody>\n  //     {props.attendees.length > 0 ? (\n  //       props.attendees.map((attendee) => (\n  //         <tr key={attendee.username}>\n  //           <td>{attendee.name}</td>\n  //           <td>{attendee.username}</td>\n  //           <td>{attendee.sex}</td>\n  //           <td>{attendee.yearOfBirth}</td>\n  //           <td>{attendee.university}</td>\n  //           <td>{attendee.major}</td>\n  //           <td>\n  //             <button\n  //               onClick={() => {\n  //                 props.editRow(attendee, false);\n  //               }}\n  //               className=\"button muted-button\"\n  //             >\n  //               Edit\n  //             </button>\n  //             <button\n  //               onClick={() => {\n  //                 props.editRow(attendee, true);\n  //               }}\n  //               className=\"button muted-button\"\n  //             >\n  //               Delete\n  //             </button>\n  //           </td>\n  //         </tr>\n  //       ))\n  //     ) : (\n  //       <tr>\n  //         <td colSpan={3}>No users</td>\n  //       </tr>\n  //     )}\n  //   </tbody>\n  // </table>\n  ;\n};\n_c = AttendeeTable;\nexport default AttendeeTable;\nvar _c;\n$RefreshReg$(_c, \"AttendeeTable\");","map":{"version":3,"names":["React","DataGrid","jsxDEV","_jsxDEV","AttendeeTable","props","columns","field","headerName","width","headerAlign","align","rows","attendees","style","height","children","getRowId","row","username","getRowHeight","initialState","pagination","paginationModel","page","pageSize","sorting","sortModel","sort","pageSizeOptions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maccaco/Documents/vdt/vdt2023-midterm-project/app/frontend/src/tables/AttendeeTable.js"],"sourcesContent":["import React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid/DataGrid\";\n\nconst AttendeeTable = (props) => {\n  const columns = [\n    { field: \"name\", headerName: \"Name\", width: 180, headerAlign: \"center\" },\n    {\n      field: \"username\",\n      headerName: \"Username\",\n      width: 100,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"sex\",\n      headerName: \"Sex\",\n      width: 60,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"yearOfBirth\",\n      headerName: \"Year\",\n      width: 70,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"university\",\n      headerName: \"University\",\n      width: 400,\n      align: \"center\",\n      headerAlign: \"center\",\n    },\n    {\n      field: \"major\",\n      headerName: \"Major\",\n      width: 150,\n      headerAlign: \"center\",\n    },\n    { field: \"edit\", headerName: \"Edit\", width: 50, headerAlign: \"center\" },\n  ];\n\n  const rows = props.attendees;\n\n  return (\n    <div style={{ height: 500, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        getRowId={(row) => row.username}\n        columns={columns}\n        getRowHeight={() => 50}\n        initialState={{\n          pagination: {\n            paginationModel: { page: 0, pageSize: 10 },\n          },\n          sorting: {\n            sortModel: [{ field: \"name\", sort: \"asc\" }],\n          },\n        }}\n        pageSizeOptions={[5, 10]}\n      />\n    </div>\n    // <table>\n    //   <thead>\n    //     <tr>\n    //       <th>Name</th>\n    //       <th>Username</th>\n    //       <th>Sex</th>\n    //       <th>Year Of Birth</th>\n    //       <th>University</th>\n    //       <th>Major</th>\n    //       <th>Actions</th>\n    //     </tr>\n    //   </thead>\n    //   <tbody>\n    //     {props.attendees.length > 0 ? (\n    //       props.attendees.map((attendee) => (\n    //         <tr key={attendee.username}>\n    //           <td>{attendee.name}</td>\n    //           <td>{attendee.username}</td>\n    //           <td>{attendee.sex}</td>\n    //           <td>{attendee.yearOfBirth}</td>\n    //           <td>{attendee.university}</td>\n    //           <td>{attendee.major}</td>\n    //           <td>\n    //             <button\n    //               onClick={() => {\n    //                 props.editRow(attendee, false);\n    //               }}\n    //               className=\"button muted-button\"\n    //             >\n    //               Edit\n    //             </button>\n    //             <button\n    //               onClick={() => {\n    //                 props.editRow(attendee, true);\n    //               }}\n    //               className=\"button muted-button\"\n    //             >\n    //               Delete\n    //             </button>\n    //           </td>\n    //         </tr>\n    //       ))\n    //     ) : (\n    //       <tr>\n    //         <td colSpan={3}>No users</td>\n    //       </tr>\n    //     )}\n    //   </tbody>\n    // </table>\n  );\n};\n\nexport default AttendeeTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE,GAAG;IAAEC,WAAW,EAAE;EAAS,CAAC,EACxE;IACEH,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,UAAU;IACtBC,KAAK,EAAE,GAAG;IACVE,KAAK,EAAE,QAAQ;IACfD,WAAW,EAAE;EACf,CAAC,EACD;IACEH,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,KAAK;IACjBC,KAAK,EAAE,EAAE;IACTE,KAAK,EAAE,QAAQ;IACfD,WAAW,EAAE;EACf,CAAC,EACD;IACEH,KAAK,EAAE,aAAa;IACpBC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,EAAE;IACTE,KAAK,EAAE,QAAQ;IACfD,WAAW,EAAE;EACf,CAAC,EACD;IACEH,KAAK,EAAE,YAAY;IACnBC,UAAU,EAAE,YAAY;IACxBC,KAAK,EAAE,GAAG;IACVE,KAAK,EAAE,QAAQ;IACfD,WAAW,EAAE;EACf,CAAC,EACD;IACEH,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE,GAAG;IACVC,WAAW,EAAE;EACf,CAAC,EACD;IAAEH,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAS,CAAC,CACxE;EAED,MAAME,IAAI,GAAGP,KAAK,CAACQ,SAAS;EAE5B,oBACEV,OAAA;IAAKW,KAAK,EAAE;MAAEC,MAAM,EAAE,GAAG;MAAEN,KAAK,EAAE;IAAO,CAAE;IAAAO,QAAA,eACzCb,OAAA,CAACF,QAAQ;MACPW,IAAI,EAAEA,IAAK;MACXK,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC,QAAS;MAChCb,OAAO,EAAEA,OAAQ;MACjBc,YAAY,EAAEA,CAAA,KAAM,EAAG;MACvBC,YAAY,EAAE;QACZC,UAAU,EAAE;UACVC,eAAe,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAG;QAC3C,CAAC;QACDC,OAAO,EAAE;UACPC,SAAS,EAAE,CAAC;YAAEpB,KAAK,EAAE,MAAM;YAAEqB,IAAI,EAAE;UAAM,CAAC;QAC5C;MACF,CAAE;MACFC,eAAe,EAAE,CAAC,CAAC,EAAE,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAACC,EAAA,GA9GI9B,aAAa;AAgHnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}